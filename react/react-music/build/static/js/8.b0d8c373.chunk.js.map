{"version":3,"sources":["application/Singers/style.js","components/recommendList/music.png","application/Recommend/style.js","components/slider/style.js","components/slider/index.js","components/recommendList/style.js","components/recommendList/index.js","application/Recommend/index.js"],"names":["NavContainer","styled","div","ListContainer","props","play","List","style","ListItem","EnterLoading","module","exports","Content","SliderContainer","React","memo","useState","sliderSwiper","setSliderSwiper","bannerList","useEffect","length","Swiper","loop","autoplay","delay","disableOnInteraction","pagination","el","console","log","className","map","slider","key","imageUrl","src","width","height","alt","ListWrapper","withRouter","recommendList","item","id","onClick","history","push","placeholder","require","picUrl","Math","floor","playCount","name","connect","state","getIn","enterLoading","songsCount","size","dispatch","getBannerDataDispatch","actionTypes","getRecommendListDataDispatch","bannerListJS","toJS","recommendListJS","onScroll","forceCheck","renderRoutes","route","routes"],"mappings":"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","file":"static/js/8.b0d8c373.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport style from '../../assets/global-style';\r\n\r\nexport const NavContainer  = styled.div`\r\n  box-sizing: border-box;\r\n  position: fixed;\r\n  top: 95px;\r\n  width: 100%;\r\n  padding: 5px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const ListContainer = styled.div`\r\n  position: fixed;\r\n  top: 160px;\r\n  left: 0;\r\n  bottom: ${props => props.play ? \"60px\": 0};\r\n  overflow: hidden;\r\n  width: 100%;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  margin: auto;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  .title {\r\n    margin:10px 0 10px 10px;\r\n    color: ${style[\"font-color-desc\"]};\r\n    font-size: ${style[\"font-size-s\"]};\r\n  }\r\n`;\r\nexport const ListItem = styled.div`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin: 0 5px;\r\n  padding: 5px 0;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${style[\"border-color\"]};\r\n  .img_wrapper {\r\n    margin-right: 20px;\r\n    img{\r\n      border-radius: 3px;\r\n      width: 50px;\r\n      height: 50px;\r\n    }\r\n  }\r\n  .name{\r\n    font-size: ${style[\"font-size-m\"]};\r\n    color: ${style[\"font-color-desc\"]};\r\n    font-weight: 500;\r\n  }\r\n`;\r\nexport const EnterLoading = styled.div`\r\n  position: fixed;\r\n  left: 0; right: 0; top: 0; bottom: 0;\r\n  width: 100px;\r\n  height: 100px;\r\n  margin: auto;\r\n`\r\n","module.exports = __webpack_public_path__ + \"static/media/music.64444b39.png\";","import styled from'styled-components';\r\n\r\nexport const Content = styled.div`\r\n  position: fixed;\r\n  top: 94px;\r\n  bottom: ${props => props.play > 0 ? \"60px\": 0};\r\n  width: 100%;\r\n`","import styled from 'styled-components';\nimport style from '../../assets/global-style';\n\nexport const SliderContainer = styled.div`\n  position: relative;\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  margin: auto;\n  background: white;\n  .before {\n    position: absolute;\n    top: -300px;\n    height: 400px;\n    width: 100%;\n    background: ${style[\"theme-color\"]};\n  }\n  .slider-container{\n    position: relative;\n    width: 98%;\n    height: 160px;\n    overflow: hidden;\n    margin: auto;\n    border-radius: 6px;\n    .slider-nav{\n      position: absolute;\n      display: block;\n      width: 100%;\n      height: 100%;\n    }\n    .swiper-pagination-bullet-active{\n      background: ${style[\"theme-color\"]};\n    }\n  }\n`\n","import React, { useEffect, useState } from 'react';\nimport { SliderContainer } from './style';\nimport \"swiper/css/swiper.css\";\nimport Swiper from \"swiper\";\n\nfunction Slider(props) {\n  const [sliderSwiper, setSliderSwiper] = useState(null);\n  const { bannerList } = props;\n\n  useEffect(() => {\n    if(bannerList.length && !sliderSwiper){\n        let sliderSwiper = new Swiper(\".slider-container\", {\n          loop: true,\n          autoplay: {\n            delay: 3000,\n            disableOnInteraction: false,\n          },\n          pagination: {el:'.swiper-pagination'},\n        });\n        console.log();\n        setSliderSwiper(sliderSwiper);\n    }\n  }, [bannerList.length, sliderSwiper])\n  return (\n    <SliderContainer>\n      <div className=\"before\"></div>\n      <div className=\"slider-container\">\n        <div className=\"swiper-wrapper\">\n          {\n            bannerList.map(slider => {\n              return (\n                <div className=\"swiper-slide\" key={slider.imageUrl}>\n                  <div className=\"slider-nav\">\n                    <img src={slider.imageUrl} width=\"100%\" height=\"100%\" alt=\"推荐\" />\n                  </div>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className=\"swiper-pagination\"></div>\n      </div> \n    </SliderContainer>\n  );\n}\n\n\nexport default React.memo(Slider);","import styled from 'styled-components';\nimport style from '../../assets/global-style';\n\nexport const ListWrapper = styled.div`\n  max-width: 100%;\n  .title{\n    font-weight: 700;\n    padding-left: 6px;\n    font-size: 14px;\n    line-height: 60px;\n    color: ${style[\"font-color\"]};\n  }\n`\nexport const List = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-around;\n` \n\nexport const ListItem = styled.div`\n  position: relative;\n  width: 32%;\n  .decorate {\n    z-index: 1;\n    position: absolute;\n    top: 0;\n    width: 100%;\n    height: 35px;\n    border-radius: 3px;\n    background: linear-gradient(hsla(0,0%,43%,.4),hsla(0,0%,100%,0));\n  }\n  .img_wrapper{\n    position: relative;\n    height: 0;\n    padding-bottom: 100%;\n    .play_count {\n      z-index: 1;\n      position: absolute;\n      right: 2px;\n      top: 2px;\n      font-size: ${style[\"font-size-s\"]};\n      line-height: 15px;\n      color: ${style[\"font-color-light\"]};\n      .play{\n        vertical-align: top;\n      }\n    }\n    img {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      border-radius: 3px;\n    }\n  }\n  .desc {\n      overflow: hidden;\n      margin-top: 2px;\n      padding: 0 2px;\n      height: 50px;\n      text-align: left;\n      font-size: ${style[\"font-size-s\"]};\n      line-height: 1.4;\n      color: ${style[\"font-color-desc\"]};\n    }\n`","import React from 'react';\nimport { \n  ListWrapper,\n  ListItem,\n  List\n} from './style';\nimport LazyLoad from \"react-lazyload\";\nimport { withRouter } from 'react-router-dom';\n\nfunction RecommendList(props) {\n  const enterDetail = (id) => {\n    props.history.push(`/recommend/${id}`)\n  }\n  return (\n    <ListWrapper>\n      <h1 className=\"title\">推荐歌单</h1>\n      <List>\n        {\n          props.recommendList.map(item => {\n            return (\n              <ListItem key={item.id} onClick={() => enterDetail(item.id)}>\n                <div className=\"img_wrapper\">\n                  <div className=\"decorate\"></div>\n                  <LazyLoad placeholder={<img width=\"100%\" height=\"100%\" src={require('./music.png')} alt=\"music\"/>}>\n                    <img src={item.picUrl + \"?param=300x300\"} width=\"100%\" height=\"100%\" alt=\"music\"/>\n                  </LazyLoad>\n                  <div className=\"play_count\">\n                    <i className=\"iconfont play\">&#xe885;</i>\n                    <span className=\"count\">{Math.floor(item.playCount/10000)}万</span>\n                  </div>\n                </div>\n                <div className=\"desc\">{item.name}</div>\n              </ListItem>\n            )\n          })\n        }\n      </List>\n    </ListWrapper>\n  );\n  }\n \nexport default withRouter(React.memo(RecommendList));","import React, { useEffect } from 'react';\r\n// import { renderRoutes } from 'react-router-config'\r\nimport { Content } from './style'\r\nimport * as actionTypes from './store/actionCreators';\r\n\r\nimport { renderRoutes } from 'react-router-config';\r\n\r\nimport { connect } from 'react-redux'\r\nimport Slider from '../../components/slider';\r\nimport RecommendList from '../../components/recommendList';\r\nimport { forceCheck } from 'react-lazyload';\r\nimport { EnterLoading } from './../Singers/style';\r\nimport Scroll from '../../baseUI/scroll';\r\nimport Loading from '../../baseUI/loading-v2/index';\r\n\r\nfunction Recommend(props) {\r\n  // const {route} = props\r\n  const { bannerList, recommendList, enterLoading, songsCount } = props;\r\n  const { getBannerDataDispatch, getRecommendListDataDispatch } = props;\r\n  useEffect(() => {\r\n    if (!bannerList.size) {\r\n      getBannerDataDispatch();\r\n    }\r\n    if (!recommendList.size) {\r\n      getRecommendListDataDispatch();\r\n    }\r\n  }, []);\r\n  const bannerListJS = bannerList ? bannerList.toJS() : [];\r\n  const recommendListJS = recommendList ? recommendList.toJS() : [];\r\n  return (\r\n    <Content play={songsCount}>\r\n      <Scroll className=\"list\" onScroll={forceCheck}>\r\n        <div>\r\n          <Slider bannerList={bannerListJS}></Slider>\r\n          <RecommendList recommendList={recommendListJS}></RecommendList>\r\n        </div>\r\n      </Scroll>\r\n      {enterLoading ? <EnterLoading><Loading></Loading></EnterLoading> : null}\r\n      { renderRoutes (props.route.routes) }\r\n    </Content>\r\n  );\r\n}\r\n\r\n// 映射Redux全局的state到组件的props上\r\nconst mapStateToProps = (state) => ({\r\n  // 不要再这里将数据toJS,不然每次diff比对props的时候都是不一样的引用，还是导致不必要的重渲染, 属于滥用immutablebannerList: state.getIn(['recommend', 'bannerList']),\r\n  recommendList: state.getIn(['recommend', 'recommendList']),\r\n  bannerList: state.getIn(['recommend', 'bannerList']),\r\n  enterLoading: state.getIn(['recommend', 'enterLoading']),\r\n  songsCount: state.getIn (['player', 'playList']).size,\r\n\r\n});\r\n// 映射dispatch到props上\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getBannerDataDispatch() {\r\n      dispatch(actionTypes.getBannerList());\r\n    },\r\n    getRecommendListDataDispatch() {\r\n      dispatch(actionTypes.getRecommendList());\r\n    },\r\n  }\r\n};\r\n\r\n// 将ui组件包装成容器组件\r\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Recommend));\r\n"],"sourceRoot":""}
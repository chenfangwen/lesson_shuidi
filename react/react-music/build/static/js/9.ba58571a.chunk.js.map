{"version":3,"sources":["application/Singers/style.js","application/Rank/style.js","application/Rank/index.js"],"names":["NavContainer","styled","div","ListContainer","props","play","List","style","ListItem","EnterLoading","Container","ul","globalRank","li","tracks","length","SongList","connect","state","rankList","getIn","loading","dispatch","getRankListDataDispatch","getRankList","React","memo","list","songsCount","toJS","useEffect","renderRankList","global","map","item","index","key","coverImgId","onClick","detail","history","push","id","className","src","coverImgUrl","alt","updateFrequency","first","second","renderSongList","globalStartIndex","filterIndex","officialList","slice","globalList","displayStyle","renderRoutes","route","routes"],"mappings":"2hDAGO,IAAMA,EAAgBC,IAAOC,IAAX,KAWZC,EAAgBF,IAAOC,IAAV,KAId,SAAAE,GAAK,OAAIA,EAAMC,KAAO,OAAQ,KAK7BC,EAAOL,IAAOC,IAAV,IAOJK,IAAM,mBACFA,IAAM,gBAGVC,EAAWP,IAAOC,IAAV,IAOQK,IAAM,gBAUlBA,IAAM,eACVA,IAAM,oBAINE,EAAeR,IAAOC,IAAV,M,0jDCnDlB,IAAMQ,EAAYT,IAAOC,IAAV,KAGV,SAAAE,GAAK,OAAIA,EAAMC,KAAO,EAAE,OAAQ,IAM3BE,IAAM,eACVA,IAAM,oBAIND,EAAOL,IAAOU,GAAV,KAGJ,SAAAP,GAAK,OAAIA,EAAMQ,WAAa,OAAQ,KAIjCL,IAAM,qBAOTC,EAAWP,IAAOY,GAAV,KACR,SAAAT,GAAK,OAAIA,EAAMU,OAAOC,OAAS,OAAQ,KAEvBR,IAAM,iBAErB,SAAAH,GAAK,OAAIA,EAAMU,OAAOC,OAAS,OAAQ,UACvC,SAAAX,GAAK,OAAIA,EAAMU,OAAOC,OAAS,OAAQ,SAoBlCR,IAAM,gBACVA,IAAM,qBAIRS,EAAWf,IAAOU,GAAV,IAOJJ,IAAM,gB,gCC0BRU,uBAbS,SAACC,GAAD,MAAY,CAClCC,SAAUD,EAAME,MAAM,CAAC,OAAQ,aAC/BC,QAASH,EAAME,MAAM,CAAC,OAAQ,gBAGL,SAACE,GAC1B,MAAO,CACLC,wBADK,WAEHD,EAASE,mBAKAP,CAA6CQ,IAAMC,MAlFlE,SAActB,GAAQ,IACHuB,EAA8BvB,EAAvCe,SAAeE,EAAwBjB,EAAxBiB,QAASO,EAAexB,EAAfwB,WACxBL,EAA4BnB,EAA5BmB,wBAEJJ,EAAWQ,EAAOA,EAAKE,OAAS,GAEpCC,qBAAU,WACJX,EAASJ,QACXQ,MAGD,IAEH,IAcMQ,EAAiB,SAACJ,EAAMK,GAC5B,OACE,kBAAC1B,EAAD,CAAMM,WAAYoB,GAEhBL,EAAKM,KAAI,SAACC,EAAMC,GACd,OACE,kBAAC3B,EAAD,CAAU4B,IAAG,UAAKF,EAAKG,YAAV,OAAuBF,GAASrB,OAAQoB,EAAKpB,OAAQwB,QAAS,kBApBhEC,EAoBkFL,OAnBrG9B,EAAMoC,QAAQC,KAAd,gBAA4BF,EAAOG,KADjB,IAACH,IAqBT,yBAAKI,UAAU,eACb,yBAAKC,IAAKV,EAAKW,YAAaC,IAAI,KAChC,yBAAKH,UAAU,aACf,0BAAMA,UAAU,mBAAmBT,EAAKa,kBArB/B,SAACpB,GACtB,OAAOA,EAAKZ,OACV,kBAACC,EAAD,KAEIW,EAAKM,KAAI,SAACC,EAAMC,GACd,OAAO,wBAAIC,IAAKD,GAAQA,EAAM,EAAvB,KAA4BD,EAAKc,MAAjC,MAA2Cd,EAAKe,YAI3D,KAcQC,CAAehB,EAAKpB,cAS9BqC,EAAmBC,YAAYjC,GAC/BkC,EAAelC,EAASmC,MAAM,EAAGH,GACjCI,EAAapC,EAASmC,MAAMH,GAC5BK,EAAenC,EAAU,CAAC,QAAU,QAAU,CAAC,QAAW,IAC9D,OACE,kBAACX,EAAD,CAAWL,KAAMuB,GACf,kBAAC,IAAD,KACE,6BACE,wBAAIe,UAAU,UAAUpC,MAAOiD,GAA/B,sBACIzB,EAAesB,GACnB,wBAAIV,UAAU,SAASpC,MAAOiD,GAA9B,sBACIzB,EAAewB,GAAY,GAC7BlC,EAAU,kBAAC,IAAD,KAAc,kBAAC,IAAD,OAAqC,OAGlEoC,YAAarD,EAAMsD,MAAMC","file":"static/js/9.ba58571a.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport style from '../../assets/global-style';\r\n\r\nexport const NavContainer  = styled.div`\r\n  box-sizing: border-box;\r\n  position: fixed;\r\n  top: 95px;\r\n  width: 100%;\r\n  padding: 5px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const ListContainer = styled.div`\r\n  position: fixed;\r\n  top: 160px;\r\n  left: 0;\r\n  bottom: ${props => props.play ? \"60px\": 0};\r\n  overflow: hidden;\r\n  width: 100%;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  margin: auto;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  .title {\r\n    margin:10px 0 10px 10px;\r\n    color: ${style[\"font-color-desc\"]};\r\n    font-size: ${style[\"font-size-s\"]};\r\n  }\r\n`;\r\nexport const ListItem = styled.div`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin: 0 5px;\r\n  padding: 5px 0;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${style[\"border-color\"]};\r\n  .img_wrapper {\r\n    margin-right: 20px;\r\n    img{\r\n      border-radius: 3px;\r\n      width: 50px;\r\n      height: 50px;\r\n    }\r\n  }\r\n  .name{\r\n    font-size: ${style[\"font-size-m\"]};\r\n    color: ${style[\"font-color-desc\"]};\r\n    font-weight: 500;\r\n  }\r\n`;\r\nexport const EnterLoading = styled.div`\r\n  position: fixed;\r\n  left: 0; right: 0; top: 0; bottom: 0;\r\n  width: 100px;\r\n  height: 100px;\r\n  margin: auto;\r\n`\r\n","import styled from 'styled-components';\nimport style from '../../assets/global-style';\n\n// Props中的globalRank和tracks.length均代表是否为全球榜\n\nexport const Container = styled.div`\n  position: fixed;\n  top: 90px;\n  bottom: ${props => props.play > 0?\"60px\": 0};\n  width: 100%;\n  .offical,.global {\n    margin: 10px 5px;\n    padding-top: 15px;\n    font-weight: 700;\n    font-size: ${style[\"font-size-m\"]};\n    color: ${style[\"font-color-desc\"]};\n  }\n`\n\nexport const List = styled.ul`\n  margin-top: 10px;\n  padding: 0 5px;\n  display: ${props => props.globalRank ? \"flex\": \"\" };\n  flex-direction: row;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  background: ${style[\"background-color\"]};\n  &::after{\n    content:\"\";\n    display:block;\n    width: 32vw;\n  }\n`\nexport const ListItem = styled.li`\n  display: ${props => props.tracks.length ? \"flex\": \"\"};\n  padding: 3px 0;\n  border-bottom: 1px solid ${style[\"border-color\"]};\n  .img_wrapper{\n    width:  ${props => props.tracks.length ? \"27vw\": \"32vw\"};\n    height: ${props => props.tracks.length ? \"27vw\": \"32vw\"};\n    border-radius: 3px;\n    position: relative;\n    .decorate {\n      position: absolute;\n      bottom: 0;\n      width: 100%;\n      height: 35px;\n      border-radius: 3px;\n      background: linear-gradient(hsla(0,0%,100%,0),hsla(0,0%,43%,.4));\n    }\n    img{\n      width: 100%;\n      height: 100%;\n      border-radius: 3px;\n    }\n    .update_frequecy{\n      position: absolute;\n      left: 7px;\n      bottom: 7px;\n      font-size: ${style[\"font-size-ss\"]};\n      color: ${style[\"font-color-light\"]};\n    }\n  }\n`\nexport const SongList = styled.ul`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 10px 10px;\n  >li{\n    font-size: ${style[\"font-size-s\"]};\n    color: grey;\n  }\n`","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getRankList } from './store/index'\nimport Loading from '../../baseUI/loading';\nimport {\n  List, \n  ListItem,\n  SongList,\n  Container\n} from './style';\nimport Scroll from '../../baseUI/scroll/index';\nimport { EnterLoading } from './../Singers/style';\nimport { filterIndex } from '../../api/utils';\nimport { renderRoutes } from 'react-router-config';\n\nfunction Rank(props) {\n  const { rankList:list, loading, songsCount } = props;\n  const { getRankListDataDispatch } = props;\n\n  let rankList = list ? list.toJS() : [];\n\n  useEffect(() => {\n    if(!rankList.length){\n      getRankListDataDispatch();\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  const enterDetail = (detail) => {\n    props.history.push(`/rank/${detail.id}`)\n  }\n  const renderSongList = (list) => {\n    return list.length ? (\n      <SongList>\n        {\n          list.map((item, index) => {\n            return <li key={index}>{index+1}. {item.first} - {item.second}</li>\n          })\n        }\n      </SongList>\n    ) : null;\n  }\n  const renderRankList = (list, global) => {\n    return (\n      <List globalRank={global}>\n       {\n        list.map((item, index) => {\n          return (\n            <ListItem key={`${item.coverImgId}${index}`} tracks={item.tracks} onClick={() => enterDetail(item)}>\n              <div className=\"img_wrapper\">\n                <img src={item.coverImgUrl} alt=\"\"/>\n                <div className=\"decorate\"></div>\n                <span className=\"update_frequecy\">{item.updateFrequency}</span>\n              </div>\n              { renderSongList(item.tracks)  }\n            </ListItem>\n          )\n       })\n      } \n      </List>\n    )\n  }\n\n  let globalStartIndex = filterIndex(rankList);\n  let officialList = rankList.slice(0, globalStartIndex);\n  let globalList = rankList.slice(globalStartIndex);\n  let displayStyle = loading ? {\"display\":\"none\"}:  {\"display\": \"\"};\n  return (\n    <Container play={songsCount}>\n      <Scroll>\n        <div>\n          <h1 className=\"offical\" style={displayStyle}>官方榜</h1>\n            { renderRankList(officialList) }\n          <h1 className=\"global\" style={displayStyle}>全球榜</h1>\n            { renderRankList(globalList, true) }\n          { loading ? <EnterLoading><Loading></Loading></EnterLoading> : null }\n        </div>\n      </Scroll> \n      {renderRoutes(props.route.routes)}\n    </Container>\n    );\n}\n\n// 映射Redux全局的state到组件的props上\nconst mapStateToProps = (state) => ({\n  rankList: state.getIn(['rank', 'rankList']),\n  loading: state.getIn(['rank', 'loading'])\n});\n// 映射dispatch到props上\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getRankListDataDispatch() {\n      dispatch(getRankList());\n    }\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Rank));"],"sourceRoot":""}